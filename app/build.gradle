buildscript {
    dependencies {
        classpath "org.jacoco:org.jacoco.core:0.8.7"
    }
}
plugins {
    id 'com.android.application'
    id 'jacoco'
}
    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localProperties.load(new FileInputStream(localPropertiesFile))
    }

    def apiKey = localProperties['RR_KEY'] ?: "DefaultAPIKey"

jacoco {
    toolVersion = "0.8.7"
    reportsDir = file("$buildDir/customJacocoReportDir")
}



task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        html.required = true
        xml.required = true
        csv.required = false // Si vous ne voulez pas de rapport CSV
    }

    classDirectories.setFrom(fileTree(
            dir: 'build/intermediates/javac/debug/classes',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/*$ViewBinder*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    ))
    sourceDirectories.setFrom(files('src/main/java'))
    executionData.setFrom(fileTree(dir: 'build', includes: [
            'jacoco/testDebugUnitTest.exec',
            'outputs/code-coverage/connected/*coverage.ec'
    ]))
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

// Make sure to add the Jacoco plugin to the classpath in your buildscript dependencies if needed:



android {
    namespace 'com.metanoiasystem.go4lunchxoc'
    compileSdk 33

    defaultConfig {
        applicationId "com.metanoiasystem.go4lunchxoc"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"


        buildConfigField 'String', 'RR_KEY', "\"${apiKey}\""
        manifestPlaceholders = [RR_KEY: apiKey]


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true

    }
}




dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'


    // Converter for retrofit : GSON
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // Logging interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    // RX-JAVA
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // FIREBASE UI
    implementation 'com.firebaseui:firebase-ui-auth:8.0.2'
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'com.google.firebase:firebase-firestore'
    implementation platform('com.google.firebase:firebase-bom:28.0.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging:23.2.1'
    implementation "com.google.firebase:firebase-iid:21.1.0"
    implementation 'com.firebaseui:firebase-ui-firestore:7.1.1'

    // MAP
    implementation 'com.google.maps.android:android-maps-utils:0.6.2'
    implementation "com.google.android.gms:play-services-maps:18.1.0"
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.android.volley:volley:1.2.1'

    //Place API
    implementation 'com.google.android.libraries.places:places:3.2.0'

    // Glide library
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Test
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testImplementation 'com.google.android.gms:play-services-tasks:18.0.2'
    testImplementation "org.robolectric:robolectric:4.10"
    testImplementation 'junit:junit:4.13.2'




}
apply plugin: 'com.google.gms.google-services'





